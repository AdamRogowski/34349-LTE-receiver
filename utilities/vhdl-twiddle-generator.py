import math

def float_to_signed_binary(norm_float):
    # Check if the input is within the valid range
    if norm_float < -1.0 or norm_float > 1.0:
        raise ValueError("Input float must be between -1.0 and 1.0")

    # Convert the normalized float to a signed 16-bit integer
    int_val = int(norm_float * 32767)  # 32767 is the maximum positive value for a signed 16-bit integer

    # Convert the integer to its binary representation
    binary_str = bin(int_val & 0xffff)[2:].zfill(16)  # Masking with 0xffff to ensure 16-bit representation

    return binary_str

def generate_twiddle_assignments(num_points):
    assignments = ""
    assignments += "-- Twiddle Factor Assignments\n"
    assignments += "-- Generated by Python script\n\n"

    for n in range(num_points):
        angle_rad = -2 * math.pi * n / num_points
        wn_re = math.cos(angle_rad)
        wn_im = math.sin(angle_rad)
        wn_re_bin = float_to_signed_binary(wn_re)
        wn_im_bin = float_to_signed_binary(wn_im)
        assignments += f"  wn_re({n}) <= \"{wn_re_bin}\";\n"
        assignments += f"  wn_im({n}) <= \"{wn_im_bin}\";\n"

    return assignments

# Example usage:
num_points = 4
#assignments = float_to_signed_binary(-1.0)
assignments = generate_twiddle_assignments(num_points)
print(assignments)